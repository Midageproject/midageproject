#!/bin/bash
# symxport - Convert CSV symbols to multiple formats (IDA, Ghidra, MAP)
# Usage: ./symxport input.csv

if [[ $# -lt 1 ]]; then
    echo "Usage: $0 input.csv"
    exit 1
fi

INPUT="$1"
BASENAME=$(basename "$INPUT" .csv)

echo "Select output format:"
echo "1) IDA (IDC script)"
echo "2) Ghidra (ImportSymbolsScript.py)"
echo "3) MAP (Map file)"
echo "4) All (IDA, Ghidra, and MAP)"
read -rp "Enter choice [1-5]: " choice

mkdir -p work

generate_idc() {
    echo "Generating IDA IDC script: work/$BASENAME.idc"
    echo 'static main() {' > "work/$BASENAME.idc"
    tail -n +2 "$INPUT" | awk -F, '
    {
        gsub(/^0x/, "", $2)
        gsub(/^0x/, "", $4)
        abs_addr = strtonum("0x" $2) + strtonum("0x" $4)
        printf "  MakeName(0x%08X, \"%s\");\n", abs_addr, $5
    }
    END { print "}" }
    ' >> "work/$BASENAME.idc"
}

generate_ghidra_import_file() {
    echo "Generating Ghidra import file: work/$BASENAME-ghidra.import.txt"

    tail -n +2 "$INPUT" | awk -F, '
    function is_function(sym) {
        return sym ~ /^_/ || sym ~ /^sub_/ || sym ~ /^func_/ || sym ~ /@/ || sym ~ /^_?Z[0-9]/ # name mangling or stdcall
    }

    {
        gsub(/^0x/, "", $2)
        gsub(/^0x/, "", $4)

        segment_offset = strtonum("0x" $2)
        symbol_offset = strtonum("0x" $4)
        absolute = segment_offset + symbol_offset

        sym = $5
        type = is_function(sym) ? "f" : "l"

        printf "%s %08X %s\n", sym, absolute, type
    }' > "work/$BASENAME-ghidra.import.txt"
}

generate_map() {
    echo "Generating MAP file: work/$BASENAME.map"
    label="${BASENAME%%.*}"

    {
        echo " $label"
        echo ""
        echo "; Map file generated by csv2xport"
        echo ""
        echo "  Address         Publics by Name "
    } > "work/$BASENAME.map"

    tail -n +2 "$INPUT" | awk -F, '
    {
        seg = sprintf("%04X", $1)
        gsub(/^0x/, "", $3)
        off = sprintf("%08X", strtonum("0x" $3))
        printf " %s:%s    %-50s\n", seg, off, $4
    }' >> "work/$BASENAME.map"
}


case "$choice" in
    1) generate_idc ;;
    2) generate_ghidra_import_file ;;
    3) generate_map ;;
    4) generate_idc; generate_ghidra_import_file; generate_map ;;
    *) echo "Invalid choice"; exit 1 ;;
esac
